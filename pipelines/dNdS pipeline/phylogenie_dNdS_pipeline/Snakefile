import numpy
import pandas as pd
import os, zipfile

conda_envs = "/beegfs/XXXXXXXX""
TMPDIR= "/beegfs/XXXXXXXX""

pathData = "/beegfs/XXXXXXXX"
pathHome = "/beegfs/XXXXXXXX"
pathLogiciels = pathHome + "Logiciels/"
pathDockers = pathHome + "dockers/"
pathParam = pathData + "DnDs/param_mapnh_bppml/"

# pathdNdS = pathData + "DnDs/Metazoa_species_filtered_v5/subset_200_ksites_GC3/"
pathFolder = pathData + "DnDs/" + config["ech"] + "/"
pathdNdS = pathFolder + config["sample"] + "/"


pathScriptsR = pathHome + "Scripts/Projet-SplicedVariants/phylogenie_dNdS_pipeline/"

from os import listdir
from os.path import isfile, join, isdir

onlyfiles = [f for f in listdir(pathdNdS) if isdir(join(pathdNdS, f))]
print(onlyfiles)

rule all:
    input:
        # expand(pathdNdS + "{subset}/concatenatAAS.aln.raxml.support.dnd_1", subset=onlyfiles),
        # expand(pathdNdS + "{subset}/dNdS/counts_dN.dnd", subset=onlyfiles),
        # expand(pathdNdS + "{subset}/dNdS_SW/counts_dN_X_S->W.dnd", subset=onlyfiles),
        expand(pathdNdS + "data_calculation.tab")



rule preparation:
    params: time="00:20:00", mem=10000, ntasks=1, name="preparation",partition="normal",
        out=pathData + "Output/dNdSOutput/preparation_out",
        err=pathData + "Output/dNdSOutput/preparation_err"
    input:
        tree_support = pathFolder + "RAxML/concatenatAAS.aln.raxml.support",
        mapnh_dNdS_SW = pathParam + "mapnh_dNdS_SW_subsets.bpp",
        mapnh_dNdS = pathParam + "mapnh_dNdS_subsets.bpp",
        bppml = pathParam + "bppml_subsets.bpp"
    output:
        tree_support = pathdNdS + "concatenatAAS.aln.raxml.support",
        mapnh_dNdS_SW = pathdNdS + "mapnh_dNdS_SW_subsets.bpp",
        mapnh_dNdS = pathdNdS + "mapnh_dNdS_subsets.bpp",
        bppml = pathdNdS + "bppml_subsets.bpp"
    shell:
        """
        mkdir -p {pathdNdS}
        cp {input.tree_support} {output.tree_support}
        cp {input.mapnh_dNdS_SW} {output.mapnh_dNdS_SW}
        cp {input.mapnh_dNdS} {output.mapnh_dNdS}
        cp {input.bppml} {output.bppml}
        """


rule bppml:
    params: time="10-00:00:00", mem=10000, ntasks=1, name="bppml_{subset}",partition="long",
        out=pathData + "Output/dNdSOutput/bppml_{subset}_out",
        err=pathData + "Output/dNdSOutput/bppml_{subset}_err"
    input:
        tree_rooted=pathdNdS + "concatenatAAS.aln.raxml.support",
        CDS=pathdNdS + "{subset}/concatenatCDS.aln",
        bppml_param=pathdNdS + "bppml_subsets.bpp"
    output:
        params=pathdNdS + "{subset}/model_ml.params",
        tree=pathdNdS + "{subset}/concatenatAAS.aln.raxml.support.dnd_1"
    shell:
        """
        mkdir -p {pathdNdS}{wildcards.subset}
        singularity exec --bind /beegfs/:/beegfs/ {pathDockers}bppsuite_20_11_22.simg {pathScriptsR}bppml.sh {wildcards.subset} {pathdNdS} {input.bppml_param}
        """

rule mapnh_dNdS:
    params: time="160:00:00", mem=20000, ntasks=1, name="mapnh_dNdS_{subset}",partition="normal",
        out=pathData + "Output/dNdSOutput/mapnh_dNdS_{subset}_out",
        err=pathData + "Output/dNdSOutput/mapnh_dNdS_{subset}_err"
    input:
        param=pathdNdS + "{subset}/model_ml.params",
        dN=pathdNdS + "{subset}/concatenatAAS.aln.raxml.support.dnd_1",
        mapnh_param=pathdNdS + "mapnh_dNdS_subsets.bpp"
    output:
        dS=pathdNdS + "{subset}/dNdS/counts_dS.dnd",
        dS_norm=pathdNdS + "{subset}/dNdS/counts_dS_norm.dnd",
        dN=pathdNdS + "{subset}/dNdS/counts_dN.dnd",
        dN_norm=pathdNdS + "{subset}/dNdS/counts_dN_norm.dnd"
    shell:
        """
        mkdir -p {pathdNdS}{wildcards.subset}/dNdS/
        singularity exec --bind /beegfs/:/beegfs/ {pathDockers}bppsuite_20_11_22.simg  {pathScriptsR}mapnh_dNdS.sh {wildcards.subset} {pathdNdS} {input.mapnh_param}
        """

rule mapnh_dNdS_SW:
    params: time="144:00:00", mem=30000, ntasks=1, name="mapnh_dNdS_SW_{subset}",partition="normal",
        out=pathData + "Output/dNdSOutput/mapnh_dNdS_SW_{subset}_out",
        err=pathData + "Output/dNdSOutput/mapnh_dNdS_SW_{subset}_err"
    input:
        param=pathdNdS + "{subset}/model_ml.params",
        tree=pathdNdS + "{subset}/concatenatAAS.aln.raxml.support.dnd_1",
        mapnh_param=pathdNdS + "mapnh_dNdS_SW_subsets.bpp"
    output:
        dN=pathdNdS + "{subset}/dNdS_SW/counts_dN_X_S->W.dnd"
    shell:
        """
        mkdir -p {pathdNdS}{wildcards.subset}/dNdS_SW/
        singularity exec --bind /beegfs/:/beegfs/ {pathDockers}bppsuite_20_11_22.simg {pathScriptsR}mapnh_dNdS.sh {wildcards.subset} {pathdNdS} {input.mapnh_param}
        """

def mapnh_dNdS_SW_output(wildcards):
    return expand(pathdNdS + "{subset}/dNdS_SW/counts_dN_X_S->W.dnd", subset=onlyfiles)

def mapnh_dNdS_output(wildcards):
    return expand(pathdNdS + "{subset}/dNdS/counts_dN_norm.dnd",subset=onlyfiles)


rule analysis:
    params: time="02:00:00", mem=10000, ntasks=1, name="analysis",partition="normal",
        out=pathData + "Output/dNdSOutput/analysis_out",
        err=pathData + "Output/dNdSOutput/analysis_err"
    input:
        mapnh_dNdS_SW=mapnh_dNdS_SW_output,
        mapnh_dNdS=mapnh_dNdS_output
    output:
        output_table=pathdNdS + "data_calculation.tab"
    shell:
        """
        Rscript --vanilla {pathScriptsR}Calculate_dNdS_per_branch.R {pathdNdS} {output.output_table}
        """
